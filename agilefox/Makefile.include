## the cpu to build for
export CPU = stm32f103rey6

# toolchain config
export PREFIX = arm-none-eabi-
export CC = $(PREFIX)gcc
export AR = $(PREFIX)ar
export CFLAGS += -DUSE_STDPERIPH_DRIVER -ggdb -g3 -std=gnu99 -O0 -Wall -Wstrict-prototypes -mcpu=cortex-m3 $(FPU_USAGE) -mlittle-endian -mthumb -mthumb-interwork -nostartfiles
export ASFLAGS += -ggdb -g3 -mcpu=cortex-m3 $(FPU_USAGE) -mlittle-endian
export AS = $(PREFIX)as
export LINK = $(PREFIX)gcc
export SIZE = $(PREFIX)size
export OBJCOPY = $(PREFIX)objcopy
FLASHER = $(RIOTCPU)/$(CPU)/tools/flash.sh
DEBUGGER = $(RIOTCPU)/$(CPU)/tools/debug.sh
TERM = miniterm.py -b 115200
LINKFLAGS =  -DUSE_STDPERIPH_DRIVER -DUSE_STM32_DISCOVERY -g3 -ggdb -mcpu=cortex-m3 $(FPU_USAGE) -mlittle-endian -static -lgcc -mthumb -mthumb-interwork -nostartfiles -T$(RIOTCPU)/$(CPU)/stm32_flash.ld

ifeq ($(strip $(PORT)),)
	export PORT = /dev/ttyUSB2
endif
export HEXFILE = $(BINDIR)/$(PROJECT).hex
export FFLAGS = $(HEXFILE)

export ELFFILE = $(BINDIR)/$(PROJECT).elf
export DEBUGGER_FLAGS = $(ELFFILE)

INCLUDES += -I$(RIOTBOARD)/$(BOARD)/include/
INCLUDES += -I$(RIOTCPU)/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/Include
INCLUDES += -I$(RIOTCPU)/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x
INCLUDES += -I$(RIOTCPU)/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/STM32F10x_StdPeriph_Driver/inc
INCLUDES += -I$(RIOTCPU)/stm32f103rey6/include

ifneq (,$(filter defaulttransceiver,$(USEMODULE)))
	USEMODULE += at86rf231
	USEMODULE += transceiver
endif

USEMODULE += stm32f10xstdperi
export UNDEF += $(BINDIR)cpu/startup.o
export UNDEF += $(BINDIR)cpu/syscalls.o

export INCLUDES 

#insert OFLAGS -O ihex
export OFLAGS = -O ihex
